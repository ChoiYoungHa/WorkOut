<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.INoticeMapper">

    <!--게시글 등록(제목, 카테고리) 그외 디폴트 값 -->
    <insert id="InsertNoticeInfo" parameterType="NoticeDTO">
        INSERT INTO work.post
            (
                MEMBER_MEMBER_ID,
                POST_CATEGORY,
                POST_TITLE
            )
            VALUES(
                #{member_id},
                #{post_category},
                #{post_title}
            )
    </insert>

    <!--게시글 내용 등록 조회성능을 위해 테이블 분리 -->
    <insert id="ContentNotice" parameterType="NoticeDTO">
        INSERT INTO work.post_content
                (
                CONTENT
                )
        VALUES(
                #{content}
              )
    </insert>

    <!-- 게시판 리스트 쿼리 / 식단, 운동 게시판 분리 전체게시물-->
    <select id="getNoticeList" resultType="NoticeDTO">
        SELECT P.POST_VIEW, P.POST_RECOM, P.POST_TITLE, P.POST_ID, M.MEMBER_NIC
        FROM work.POST P, work.MEMBER M
        WHERE P.MEMBER_MEMBER_ID = M.MEMBER_ID
    </select>

    <!-- 게시판 리스트 쿼리 / 식단, 운동 게시판 분리쿼리-->
    <select id="getNoticeList_Category" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT P.POST_VIEW, P.POST_RECOM, P.POST_TITLE, P.POST_ID, M.MEMBER_NIC
        FROM work.POST P, work.MEMBER M
        WHERE P.MEMBER_MEMBER_ID = M.MEMBER_ID AND P.POST_CATEGORY = #{post_category}
        ORDER BY P.POST_ID
    </select>

    <!-- 게시판 상세보기 쿼리-->
    <select id="getNoticeInfo" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT P.POST_ID, P.BOOKMARK, P.POST_TITLE, P.POST_VIEW, P.POST_RECOM,
               P.POST_CATEGORY, C.CONTENT, P.MEMBER_MEMBER_ID
        FROM work.POST P, work.POST_CONTENT C
        WHERE P.POST_ID = C.POST_POST_ID AND P.POST_ID = #{post_id}
    </select>

    <!-- 게시판 조회수 카운트-->
    <update id="updateNoticeReadCnt" parameterType="NoticeDTO">
        UPDATE work.post SET
            POST_VIEW = POST_VIEW + 1
        WHERE
            POST_ID = #{post_id}
    </update>

    <!-- 게시판 수정 쿼리 -->
    <update id="updateNoticeInfo" parameterType="NoticeDTO">
        UPDATE work.post P INNER JOIN work.post_content T
        ON (P.POST_ID = T.POST_POST_ID)
        SET P.POST_TITLE = #{post_title}, T.CONTENT = #{content}, P.POST_CATEGORY = #{post_category}
        WHERE P.POST_ID = #{post_id}
    </update>

    <!-- 게시판 삭제 쿼리 -->
    <delete id="deleteNoticeInfo" parameterType="NoticeDTO">
        DELETE FROM work.post
        WHERE POST_ID = #{post_id}
    </delete>

    <!-- 북마크 게시물 등록 쿼리-->
    <insert id="bookmark_insert" parameterType="NoticeDTO">
        INSERT INTO work.bookmark
                (
                MEMBER_ID,
                POST_ID
                )
        VALUES  (
                #{member_id},
                #{post_id}
                )
    </insert>

    <!-- 추천수 증가 쿼리 -->
    <update id="recom_update" parameterType="NoticeDTO">
        UPDATE work.post SET
            POST_RECOM = POST_RECOM + 1
        WHERE
            POST_ID = #{post_id}
    </update>

    <!-- 북마크 게시물 등록 취소-->
    <delete id="bookmark_delete" parameterType="NoticeDTO">
        DELETE FROM work.bookmark
        WHERE POST_ID = #{post_id}
    </delete>

    <!-- 북마크 게시물 확인 -->
    <select id="bookmark_find" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT POST_ID FROM work.bookmark
        WHERE MEMBER_ID = #{member_id}
        ORDER BY POST_ID
    </select>

    <!-- 댓글 등록-->
    <insert id="comment_insert" parameterType="NoticeDTO">
        INSERT INTO work.comment
        (
         POST_ID,
         COMMENT_CT,
         MEMBER_NIC
        )
        VALUES
        (
         #{post_id},
         #{comment_ct},
         #{member_nic}
        )
    </insert>

    <!--댓글 리스트 -->
    <select id="comment_find" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT COMMENT_CT, MEMBER_NIC
        FROM work.comment
        WHERE POST_ID = #{post_id};
    </select>

    <!--인기순 게시판 정렬-->
    <select id="hit_sort_board" resultType="NoticeDTO" parameterType="NoticeDTO">
        SELECT P.POST_VIEW, P.POST_RECOM, P.POST_TITLE, P.POST_ID, M.MEMBER_NIC
        FROM work.POST P, work.MEMBER M
        WHERE P.MEMBER_MEMBER_ID = M.MEMBER_ID AND P.POST_CATEGORY = #{post_category}
        ORDER BY P.POST_VIEW DESC
    </select>

















</mapper>
